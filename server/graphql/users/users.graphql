type Query {
  Users: [User],
  User(conditions: UserInput!): User,
  SocialUser(socialId: ID!, provider: String!): User,
}

# make a social json column would be better than [social]id.
type Mutation {
  AddUser(
    display_name: String!,
    email: String!
    password: String!
  ): JsonWebToken,
  SignIn(
    email: String!
    password: String!
  ): JsonWebToken,
  SignUpGoogle(
    credential: String!
  ): JsonWebToken,
  SignInGoogle(
    credential: String!
  ): JsonWebToken
}

type User {
  id: ID
  googleid: ID
  display_name: String!
  email: String!
  password: String
  created_at: Timestamp!
  updated_at: Timestamp
}

input UserInput {
  id: ID
  googleid: ID
  display_name: String
  email: String
  password: String
  created_at: Timestamp
  updated_at: Timestamp
}

type JsonWebToken {
  access_token: String!
  exp: String!
}